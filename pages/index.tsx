import Head from 'next/head'
import { useEffect, useState } from 'react'
import { Card } from '../components/Card';
import { getAllPokemon, getPokemon } from "../components/pokemon"

interface pokemonData {
  map(arg0: (pokemon: pokemonData) => Promise<unknown>): any;
  name: string; 
  url: string;
}

export default function Home() {
  const initialURL: string = "https://pokeapi.co/api/v2/pokemon";
  const [loading, setLoading] = useState(true);
  const [pokemonData, setPokemonData] = useState<string[]>([]);

  useEffect(() => {
    const fetchPokemonData = async() => {
      // 全てのポケモンデータを取得
      let res: unknown = await getAllPokemon(initialURL);
      // 各ポケモンの詳細なデータを取得
      // console.log(res);
      loadPokemon(res.results);
      setLoading(false);
    }
    fetchPokemonData();
  }, [])

  const loadPokemon = async (data: pokemonData) => {
    let _pokemonData = await Promise.all(
      data.map((pokemon: pokemonData) => {
        let pokemonRecord = getPokemon(pokemon.url);
        return pokemonRecord;
      })
    );
    setPokemonData(_pokemonData);
  }

  // console.log(pokemonData);

  return (
    <div>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    {loading ? (
      <h1>ロード中・・・</h1>
    ) : (
      <div className="pokemonCardContainer">
        {pokemonData.map((pokemon, i) => {
          return <Card key={i} pokemon={pokemon} />;
        })}
      </div>
    )}

    </div>
  )
}
